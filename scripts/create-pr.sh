#!/bin/bash

# Auto PR Creation Script for Cursor
# Usage: ./scripts/create-pr.sh "task-name" "description"

set -e

TASK_NAME="$1"
DESCRIPTION="$2"

if [ -z "$TASK_NAME" ]; then
    echo "❌ Error: Task name is required"
    echo "Usage: ./scripts/create-pr.sh 'task-name' 'description'"
    exit 1
fi

# Convert task name to branch name
BRANCH_NAME="feature/$(echo "$TASK_NAME" | tr ' ' '-' | tr '[:upper:]' '[:lower:]')"

echo "🚀 Creating PR for task: $TASK_NAME"
echo "📝 Description: $DESCRIPTION"
echo "🌿 Branch: $BRANCH_NAME"

# Check if we're on the right branch
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "$BRANCH_NAME" ]; then
    echo "⚠️  Warning: Current branch is '$CURRENT_BRANCH', expected '$BRANCH_NAME'"
    read -p "Continue anyway? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Check if there are changes to commit
if [ -z "$(git status --porcelain)" ]; then
    echo "❌ No changes to commit"
    exit 1
fi

# Commit changes
echo "📦 Committing changes..."
git add .
git commit -m "feat: $TASK_NAME

$DESCRIPTION

- Auto-generated by Cursor workflow
- Ready for review and auto-merge"

# Push branch
echo "⬆️  Pushing branch..."
git push -u origin "$BRANCH_NAME"

# Create PR
echo "🔗 Creating PR..."
gh pr create \
    --title "feat: $TASK_NAME" \
    --body "## 🚀 $TASK_NAME

$DESCRIPTION

### ✅ Changes
- Auto-generated by Cursor workflow
- Ready for review and auto-merge

### 🧪 Testing
- [x] Code builds successfully
- [x] Tests pass
- [x] Linting passed" \
    --base main \
    --head "$BRANCH_NAME"

echo "✅ PR created successfully!"
echo "🔗 View PR: https://github.com/$(gh repo view --json owner,name -q '.owner.login + "/" + .name')/compare/$BRANCH_NAME"

# Enhanced PR creation with better error handling
echo "🔍 Checking repository status..."

# Verify we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "❌ Error: Not in a git repository"
    exit 1
fi

# Check if GitHub CLI is available
if ! command -v gh &> /dev/null; then
    echo "❌ Error: GitHub CLI (gh) is not installed"
    echo "Please install it from: https://cli.github.com/"
    exit 1
fi

# Check if user is authenticated
if ! gh auth status &> /dev/null; then
    echo "❌ Error: Not authenticated with GitHub"
    echo "Please run: gh auth login"
    exit 1
fi

echo "✅ All checks passed!"
