name: Merge Protection

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  protect-main:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify merge integrity
        run: |
          echo "Verifying merge integrity for main branch"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç - —ç—Ç–æ merge commit
          LAST_COMMIT=$(git log -1 --pretty=format:"%H %s")
          echo "Last commit: $LAST_COMMIT"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ main –≤–µ—Ç–∫–∞ –Ω–µ –±—ã–ª–∞ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–∞
          if git log --oneline -10 | grep -q "Merge"; then
            echo "‚úÖ Merge commit detected, main branch integrity maintained"
          else
            echo "‚ö†Ô∏è No merge commit detected in recent history"
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç force push
          if git reflog show main | head -5 | grep -q "forced-update"; then
            echo "‚ùå Force push detected in main branch history"
            exit 1
          else
            echo "‚úÖ No force push detected"
          fi

  enforce-pr-requirements:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enforce PR requirements
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_DRAFT="${{ github.event.pull_request.draft }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          
          echo "Enforcing requirements for PR #$PR_NUMBER"
          echo "Author: $PR_AUTHOR"
          echo "Title: $PR_TITLE"
          echo "Draft: $PR_DRAFT"
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: PR –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ draft —Å–æ—Å—Ç–æ—è–Ω–∏–∏
          if [ "$PR_DRAFT" = "true" ]; then
            echo "‚ùå Draft PRs cannot be merged"
            gh pr comment $PR_NUMBER --body "‚ùå **Draft PRs –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–º–µ—Ä–∂–µ–Ω—ã**
            
            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ PR –∏–∑ draft —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ ready for review."
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è PR
          if [[ ! "$PR_TITLE" =~ ^(feat|fix|docs|style|refactor|test|chore|ci|build|perf|revert)(\(.+\))?: .+ ]]; then
            echo "‚ùå Invalid PR title format"
            gh pr comment $PR_NUMBER --body "‚ùå **–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞–∑–≤–∞–Ω–∏—è PR**
            
            –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å [Conventional Commits](https://www.conventionalcommits.org/) —Ñ–æ—Ä–º–∞—Ç—É:
            \`\`\`
            type(scope): description
            \`\`\`
            
            –ü—Ä–∏–º–µ—Ä—ã:
            - \`feat: add user authentication\`
            - \`fix(auth): resolve login issue\`
            - \`docs: update API documentation\`"
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è PR
          if [ -z "$PR_BODY" ] || [ "$PR_BODY" = "null" ] || [ ${#PR_BODY} -lt 50 ]; then
            echo "‚ùå PR description is too short or missing"
            gh pr comment $PR_NUMBER --body "‚ùå **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ PR**
            
            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
            - –ß—Ç–æ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ
            - –ü–æ—á–µ–º—É —ç—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            - –ö–∞–∫ —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            - –°—Å—ã–ª–∫–∏ –Ω–∞ —Å–≤—è–∑–∞–Ω–Ω—ã–µ issues (–µ—Å–ª–∏ –µ—Å—Ç—å)"
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ PR
          CHANGES=$(git diff --numstat origin/main...HEAD | awk '{sum += $1 + $2} END {print sum+0}')
          echo "PR contains $CHANGES changes"
          
          if [ "$CHANGES" -gt 1000 ]; then
            echo "‚ö†Ô∏è PR is very large"
            gh pr comment $PR_NUMBER --body "‚ö†Ô∏è **PR —Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π ($CHANGES)**
            
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑–±–∏—Ç—å –±–æ–ª—å—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ–Ω—å—à–∏—Ö PR –¥–ª—è:
            - –£–ø—Ä–æ—â–µ–Ω–∏—è —Ä–µ–≤—å—é
            - –°–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–∞ –æ—à–∏–±–æ–∫
            - –£—Å–∫–æ—Ä–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –º–µ—Ä–¥–∂–∞
            
            –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ PR."
          fi
          
          echo "‚úÖ All PR requirements met"

  check-approvals:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check PR approvals
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–≤—å—é–µ—Ä–∞—Ö
          REVIEWS=$(gh pr view $PR_NUMBER --json reviews)
          APPROVALS=$(echo $REVIEWS | jq -r '.reviews[] | select(.state == "APPROVED") | .author.login' | sort -u | wc -l)
          CHANGES_REQUESTED=$(echo $REVIEWS | jq -r '.reviews[] | select(.state == "CHANGES_REQUESTED") | .author.login' | sort -u | wc -l)
          
          echo "Approvals: $APPROVALS"
          echo "Changes requested: $CHANGES_REQUESTED"
          
          # –¢—Ä–µ–±—É–µ–º –º–∏–Ω–∏–º—É–º 1 –æ–¥–æ–±—Ä–µ–Ω–∏–µ –¥–ª—è –º–µ—Ä–¥–∂–∞ –≤ main
          if [ "$APPROVALS" -lt 1 ]; then
            echo "‚ùå PR requires at least 1 approval"
            gh pr comment $PR_NUMBER --body "‚ùå **PR —Ç—Ä–µ–±—É–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è**
            
            –î–ª—è –º–µ—Ä–¥–∂–∞ –≤ main –≤–µ—Ç–∫—É —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 1 –æ–¥–æ–±—Ä–µ–Ω–∏–µ –æ—Ç —Ä–µ–≤—å—é–µ—Ä–∞.
            
            –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–æ–±—Ä–µ–Ω–∏–π: $APPROVALS"
            exit 1
          fi
          
          if [ "$CHANGES_REQUESTED" -gt 0 ]; then
            echo "‚ùå PR has requested changes"
            gh pr comment $PR_NUMBER --body "‚ùå **–ï—Å—Ç—å –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è**
            
            –†–µ–≤—å—é–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∑–∞–º–µ—á–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –º–µ—Ä–¥–∂–µ–º.
            
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π: $CHANGES_REQUESTED"
            exit 1
          fi
          
          echo "‚úÖ PR has required approvals"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  prevent-direct-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check for direct push
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ push –±—ã–ª —Å–¥–µ–ª–∞–Ω —á–µ—Ä–µ–∑ PR, –∞ –Ω–µ –Ω–∞–ø—Ä—è–º—É—é
          LAST_COMMIT=$(git log -1 --pretty=format:"%H %s")
          echo "Last commit: $LAST_COMMIT"
          
          # –ï—Å–ª–∏ –∫–æ–º–º–∏—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç "Merge pull request", —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä—è–º–æ–π push
          if [[ ! "$LAST_COMMIT" =~ "Merge pull request" ]] && [[ ! "$LAST_COMMIT" =~ "ü§ñ Auto-resolve merge conflicts" ]]; then
            echo "‚ö†Ô∏è Possible direct push to main detected"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            gh issue create \
              --title "‚ö†Ô∏è Direct push to main detected" \
              --body "–û–±–Ω–∞—Ä—É–∂–µ–Ω –≤–æ–∑–º–æ–∂–Ω—ã–π –ø—Ä—è–º–æ–π push –≤ main –≤–µ—Ç–∫—É:
              
              **Commit:** $LAST_COMMIT
              **Author:** ${{ github.actor }}
              **Time:** $(date)
              
              –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ PR –ø—Ä–æ—Ü–µ—Å—Å."
            exit 0
          else
            echo "‚úÖ Push appears to be through proper PR process"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}