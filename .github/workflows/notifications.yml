name: Merge Notifications

on:
  pull_request:
    types: [opened, closed, merged]
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  notify-pr-opened:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
      - name: Notify PR opened
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          
          echo "New PR opened: #$PR_NUMBER by $PR_AUTHOR"
          
          # –°–æ–∑–¥–∞–µ–º issue –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
          gh issue create \
            --title "üìã PR #$PR_NUMBER: $PR_TITLE" \
            --body "**–ê–≤—Ç–æ—Ä:** @$PR_AUTHOR
          **–°—Å—ã–ª–∫–∞:** $PR_URL
          **–°—Ç–∞—Ç—É—Å:** –û—Ç–∫—Ä—ã—Ç
          **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** $(date)
          
          ---
          
          –≠—Ç–æ—Ç issue –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ PR."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-pr-merged:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Notify PR merged
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          MERGE_COMMIT="${{ github.event.pull_request.merge_commit_sha }}"
          
          echo "PR merged: #$PR_NUMBER by $PR_AUTHOR"
          
          # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π issue
          ISSUE_NUMBER=$(gh issue list --search "PR #$PR_NUMBER" --json number -q '.[0].number' || echo "")
          
          if [ -n "$ISSUE_NUMBER" ]; then
            gh issue comment $ISSUE_NUMBER --body "‚úÖ **PR —É—Å–ø–µ—à–Ω–æ —Å–º–µ—Ä–∂–µ–Ω –≤ main**
            
            **Merge commit:** $MERGE_COMMIT
            **–î–∞—Ç–∞ –º–µ—Ä–¥–∂–∞:** $(date)
            **–°—Ç–∞—Ç—É—Å:** –ó–∞–≤–µ—Ä—à–µ–Ω
            
            ---
            
            üéâ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –≤ main –≤–µ—Ç–∫–µ!"
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º issue
            gh issue close $ISSUE_NUMBER --comment "PR —É—Å–ø–µ—à–Ω–æ —Å–º–µ—Ä–∂–µ–Ω, –∑–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
          fi
          
          # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Slack (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω webhook)
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\": \"üéâ PR #$PR_NUMBER —É—Å–ø–µ—à–Ω–æ —Å–º–µ—Ä–∂–µ–Ω –≤ main!\",
                \"blocks\": [
                  {
                    \"type\": \"section\",
                    \"text\": {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*PR #$PR_NUMBER: $PR_TITLE*\\n–ê–≤—Ç–æ—Ä: $PR_AUTHOR\\n<${PR_URL}|–û—Ç–∫—Ä—ã—Ç—å PR>\"
                    }
                  }
                ]
              }" \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-main-updated:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Notify main branch updated
        run: |
          COMMIT_SHA="${{ github.sha }}"
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          COMMIT_AUTHOR="${{ github.event.head_commit.author.name }}"
          COMMIT_URL="${{ github.event.head_commit.url }}"
          
          echo "Main branch updated with commit: $COMMIT_SHA"
          
          # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
          REPORT="## üìà –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ main –≤–µ—Ç–∫–∏
          
          **Commit:** [$COMMIT_SHA]($COMMIT_URL)
          **–ê–≤—Ç–æ—Ä:** $COMMIT_AUTHOR
          **–°–æ–æ–±—â–µ–Ω–∏–µ:** $COMMIT_MESSAGE
          **–í—Ä–µ–º—è:** $(date)
          
          ---
          
          Main –≤–µ—Ç–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞. –í—Å–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ."
          
          # –°–æ–∑–¥–∞–µ–º issue –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          if [ "${{ github.event.head_commit.message }}" != *"ü§ñ Auto-resolve merge conflicts"* ]; then
            gh issue create \
              --title "üìà Main branch updated: $COMMIT_MESSAGE" \
              --body "$REPORT" \
              --label "main-update"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  weekly-summary:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Generate weekly summary
        run: |
          # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
          WEEK_AGO=$(date -d '1 week ago' --iso-8601)
          TODAY=$(date --iso-8601)
          
          # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ä–¥–∂–µ–π
          MERGED_PR_COUNT=$(gh pr list --state merged --base main --search "merged:$WEEK_AGO..$TODAY" --json number | jq length)
          
          # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö PR
          OPEN_PR_COUNT=$(gh pr list --state open --base main --json number | jq length)
          
          # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
          CONFLICT_ISSUES=$(gh issue list --search "label:conflict" --json number | jq length)
          
          # –°–æ–∑–¥–∞–µ–º –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
          SUMMARY="## üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –º–µ—Ä–¥–∂–∞–º
          
          **–ü–µ—Ä–∏–æ–¥:** $WEEK_AGO - $TODAY
          
          ### –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
          - ‚úÖ **–°–º–µ—Ä–∂–µ–Ω–æ PR:** $MERGED_PR_COUNT
          - üîÑ **–û—Ç–∫—Ä—ã—Ç–æ PR:** $OPEN_PR_COUNT
          - ‚ö†Ô∏è **–ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤:** $CONFLICT_ISSUES
          
          ### –¢–æ–ø –∞–≤—Ç–æ—Ä—ã –∑–∞ –Ω–µ–¥–µ–ª—é:"
          
          # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø –∞–≤—Ç–æ—Ä–æ–≤
          TOP_AUTHORS=$(gh pr list --state merged --base main --search "merged:$WEEK_AGO..$TODAY" --json author --jq '.[].author.login' | sort | uniq -c | sort -nr | head -5)
          
          if [ -n "$TOP_AUTHORS" ]; then
            echo "$TOP_AUTHORS" | while read count author; do
              SUMMARY="$SUMMARY\n- @$author: $count PR"
            done
          fi
          
          SUMMARY="$SUMMARY
          
          ---
          
          ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç"
          
          # –°–æ–∑–¥–∞–µ–º issue —Å –æ—Ç—á–µ—Ç–æ–º
          gh issue create \
            --title "üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç $(date +%Y-%m-%d)" \
            --body "$SUMMARY" \
            --label "weekly-report"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}