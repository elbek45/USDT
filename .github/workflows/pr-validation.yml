name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    outputs:
      is-valid: ${{ steps.validation.outputs.is-valid }}
      validation-message: ${{ steps.validation.outputs.message }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate PR
        id: validation
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_DRAFT="${{ github.event.pull_request.draft }}"
          HEAD_REF="${{ github.event.pull_request.head.ref }}"
          BASE_REF="${{ github.event.pull_request.base.ref }}"

          echo "Validating PR #$PR_NUMBER: $PR_TITLE"
          echo "From: $HEAD_REF to: $BASE_REF"
          echo "Draft: $PR_DRAFT"

          VALIDATION_MESSAGE=""
          IS_VALID="true"

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: PR –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ draft —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –º–µ—Ä–¥–∂–∞
          if [ "$PR_DRAFT" = "true" ]; then
            VALIDATION_MESSAGE="$VALIDATION_MESSAGE\n‚ö†Ô∏è PR –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ draft —Å–æ—Å—Ç–æ—è–Ω–∏–∏"
            IS_VALID="false"
          fi

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è PR
          if [[ ! "$PR_TITLE" =~ ^(feat|fix|docs|style|refactor|test|chore|ci|build|perf|revert)(\(.+\))?: .+ ]]; then
            VALIDATION_MESSAGE="$VALIDATION_MESSAGE\n‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ PR –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å Conventional Commits —Ñ–æ—Ä–º–∞—Ç—É: type(scope): description"
            IS_VALID="false"
          fi

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è PR
          if [ -z "$PR_BODY" ] || [ "$PR_BODY" = "null" ]; then
            VALIDATION_MESSAGE="$VALIDATION_MESSAGE\n‚ùå PR –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
            IS_VALID="false"
          fi

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ PR (–Ω–µ –±–æ–ª–µ–µ 400 –∏–∑–º–µ–Ω–µ–Ω–∏–π)
          CHANGES=$(git diff --numstat origin/$BASE_REF...HEAD | awk '{sum += $1 + $2} END {print sum}')
          if [ "$CHANGES" -gt 400 ]; then
            VALIDATION_MESSAGE="$VALIDATION_MESSAGE\n‚ö†Ô∏è PR —Å–æ–¥–µ—Ä–∂–∏—Ç $CHANGES –∏–∑–º–µ–Ω–µ–Ω–∏–π (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 400)"
          fi

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
          git fetch origin $BASE_REF
          if ! git merge-tree $(git merge-base origin/$BASE_REF HEAD) origin/$BASE_REF HEAD > /dev/null 2>&1; then
            VALIDATION_MESSAGE="$VALIDATION_MESSAGE\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å $BASE_REF –≤–µ—Ç–∫–æ–π"
            IS_VALID="false"
          fi

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ PR –Ω–µ –º–µ—Ä–¥–∂–∏—Ç main –≤ feature –≤–µ—Ç–∫—É
          if [ "$BASE_REF" != "main" ] && [ "$HEAD_REF" = "main" ]; then
            VALIDATION_MESSAGE="$VALIDATION_MESSAGE\n‚ùå –ù–µ–ª—å–∑—è –º–µ—Ä–¥–∂–∏—Ç—å main –≤–µ—Ç–∫—É –≤ feature –≤–µ—Ç–∫—É"
            IS_VALID="false"
          fi

          if [ "$IS_VALID" = "true" ]; then
            VALIDATION_MESSAGE="‚úÖ PR –ø—Ä–æ—à–µ–ª –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –≥–æ—Ç–æ–≤ –∫ –º–µ—Ä–¥–∂—É"
          fi

          echo "is-valid=$IS_VALID" >> $GITHUB_OUTPUT
          echo "message=$VALIDATION_MESSAGE" >> $GITHUB_OUTPUT

          echo "Validation result: $IS_VALID"
          echo "Message: $VALIDATION_MESSAGE"

  run-checks:
    runs-on: ubuntu-latest
    needs: validate-pr
    if: needs.validate-pr.outputs.is-valid == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint
        continue-on-error: true

      - name: Run tests
        run: pnpm test
        continue-on-error: true

      - name: Build project
        run: pnpm build
        continue-on-error: true

  comment-validation:
    runs-on: ubuntu-latest
    needs: [validate-pr, run-checks]
    if: always()
    steps:
      - name: Comment validation results
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          VALIDATION_MESSAGE="${{ needs.validate-pr.outputs.validation-message }}"
          CHECKS_STATUS="${{ needs.run-checks.result }}"

          COMMENT_BODY="## üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ PR

          $VALIDATION_MESSAGE

          ### –°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–æ–∫:
          - **–í–∞–ª–∏–¥–∞—Ü–∏—è PR**: ${{ needs.validate-pr.result }}
          - **–¢–µ—Å—Ç—ã –∏ —Å–±–æ—Ä–∫–∞**: $CHECKS_STATUS

          ---

          $([ "$CHECKS_STATUS" = "success" ] && echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!" || echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ—à–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏.")
          "

          gh pr comment $PR_NUMBER --body "$COMMENT_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-pr-status:
    runs-on: ubuntu-latest
    needs: [validate-pr, run-checks]
    if: always()
    steps:
      - name: Update PR status
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"

          if [ "${{ needs.validate-pr.outputs.is-valid }}" = "true" ] && [ "${{ needs.run-checks.result }}" = "success" ]; then
            # –î–æ–±–∞–≤–ª—è–µ–º –ª–µ–π–±–ª "ready-to-merge"
            gh pr edit $PR_NUMBER --add-label "ready-to-merge"
            echo "PR marked as ready to merge"
          else
            # –£–±–∏—Ä–∞–µ–º –ª–µ–π–±–ª "ready-to-merge" –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            gh pr edit $PR_NUMBER --remove-label "ready-to-merge" || true
            echo "PR not ready for merge"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
