/* !!! This is code generated by Prisma. Do not edit directly. !!! */

// @ts-nocheck
/*
 * This file exports the `Wexel` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/library';
import type * as $Enums from '../enums.js';
import type * as Prisma from '../internal/prismaNamespace.js';

/**
 * Model Wexel
 *
 */
export type WexelModel =
  runtime.Types.Result.DefaultSelection<Prisma.$WexelPayload>;

export type AggregateWexel = {
  _count: WexelCountAggregateOutputType | null;
  _avg: WexelAvgAggregateOutputType | null;
  _sum: WexelSumAggregateOutputType | null;
  _min: WexelMinAggregateOutputType | null;
  _max: WexelMaxAggregateOutputType | null;
};

export type WexelAvgAggregateOutputType = {
  id: number | null;
  pool_id: number | null;
  principal_usd: number | null;
  apy_base_bp: number | null;
  apy_boost_bp: number | null;
  total_claimed_usd: number | null;
};

export type WexelSumAggregateOutputType = {
  id: bigint | null;
  pool_id: number | null;
  principal_usd: bigint | null;
  apy_base_bp: number | null;
  apy_boost_bp: number | null;
  total_claimed_usd: bigint | null;
};

export type WexelMinAggregateOutputType = {
  id: bigint | null;
  owner_solana: string | null;
  owner_tron: string | null;
  pool_id: number | null;
  principal_usd: bigint | null;
  apy_base_bp: number | null;
  apy_boost_bp: number | null;
  start_ts: Date | null;
  end_ts: Date | null;
  is_collateralized: boolean | null;
  total_claimed_usd: bigint | null;
  nft_mint_address: string | null;
  nft_token_address: string | null;
  created_at: Date | null;
  updated_at: Date | null;
};

export type WexelMaxAggregateOutputType = {
  id: bigint | null;
  owner_solana: string | null;
  owner_tron: string | null;
  pool_id: number | null;
  principal_usd: bigint | null;
  apy_base_bp: number | null;
  apy_boost_bp: number | null;
  start_ts: Date | null;
  end_ts: Date | null;
  is_collateralized: boolean | null;
  total_claimed_usd: bigint | null;
  nft_mint_address: string | null;
  nft_token_address: string | null;
  created_at: Date | null;
  updated_at: Date | null;
};

export type WexelCountAggregateOutputType = {
  id: number;
  owner_solana: number;
  owner_tron: number;
  pool_id: number;
  principal_usd: number;
  apy_base_bp: number;
  apy_boost_bp: number;
  start_ts: number;
  end_ts: number;
  is_collateralized: number;
  total_claimed_usd: number;
  nft_mint_address: number;
  nft_token_address: number;
  created_at: number;
  updated_at: number;
  _all: number;
};

export type WexelAvgAggregateInputType = {
  id?: true;
  pool_id?: true;
  principal_usd?: true;
  apy_base_bp?: true;
  apy_boost_bp?: true;
  total_claimed_usd?: true;
};

export type WexelSumAggregateInputType = {
  id?: true;
  pool_id?: true;
  principal_usd?: true;
  apy_base_bp?: true;
  apy_boost_bp?: true;
  total_claimed_usd?: true;
};

export type WexelMinAggregateInputType = {
  id?: true;
  owner_solana?: true;
  owner_tron?: true;
  pool_id?: true;
  principal_usd?: true;
  apy_base_bp?: true;
  apy_boost_bp?: true;
  start_ts?: true;
  end_ts?: true;
  is_collateralized?: true;
  total_claimed_usd?: true;
  nft_mint_address?: true;
  nft_token_address?: true;
  created_at?: true;
  updated_at?: true;
};

export type WexelMaxAggregateInputType = {
  id?: true;
  owner_solana?: true;
  owner_tron?: true;
  pool_id?: true;
  principal_usd?: true;
  apy_base_bp?: true;
  apy_boost_bp?: true;
  start_ts?: true;
  end_ts?: true;
  is_collateralized?: true;
  total_claimed_usd?: true;
  nft_mint_address?: true;
  nft_token_address?: true;
  created_at?: true;
  updated_at?: true;
};

export type WexelCountAggregateInputType = {
  id?: true;
  owner_solana?: true;
  owner_tron?: true;
  pool_id?: true;
  principal_usd?: true;
  apy_base_bp?: true;
  apy_boost_bp?: true;
  start_ts?: true;
  end_ts?: true;
  is_collateralized?: true;
  total_claimed_usd?: true;
  nft_mint_address?: true;
  nft_token_address?: true;
  created_at?: true;
  updated_at?: true;
  _all?: true;
};

export type WexelAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Wexel to aggregate.
   */
  where?: Prisma.WexelWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Wexels to fetch.
   */
  orderBy?:
    | Prisma.WexelOrderByWithRelationInput
    | Prisma.WexelOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.WexelWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Wexels from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Wexels.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Wexels
   **/
  _count?: true | WexelCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: WexelAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: WexelSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: WexelMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: WexelMaxAggregateInputType;
};

export type GetWexelAggregateType<T extends WexelAggregateArgs> = {
  [P in keyof T & keyof AggregateWexel]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWexel[P]>
    : Prisma.GetScalarType<T[P], AggregateWexel[P]>;
};

export type WexelGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.WexelWhereInput;
  orderBy?:
    | Prisma.WexelOrderByWithAggregationInput
    | Prisma.WexelOrderByWithAggregationInput[];
  by: Prisma.WexelScalarFieldEnum[] | Prisma.WexelScalarFieldEnum;
  having?: Prisma.WexelScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: WexelCountAggregateInputType | true;
  _avg?: WexelAvgAggregateInputType;
  _sum?: WexelSumAggregateInputType;
  _min?: WexelMinAggregateInputType;
  _max?: WexelMaxAggregateInputType;
};

export type WexelGroupByOutputType = {
  id: bigint;
  owner_solana: string | null;
  owner_tron: string | null;
  pool_id: number;
  principal_usd: bigint;
  apy_base_bp: number;
  apy_boost_bp: number;
  start_ts: Date;
  end_ts: Date;
  is_collateralized: boolean;
  total_claimed_usd: bigint;
  nft_mint_address: string | null;
  nft_token_address: string | null;
  created_at: Date;
  updated_at: Date;
  _count: WexelCountAggregateOutputType | null;
  _avg: WexelAvgAggregateOutputType | null;
  _sum: WexelSumAggregateOutputType | null;
  _min: WexelMinAggregateOutputType | null;
  _max: WexelMaxAggregateOutputType | null;
};

type GetWexelGroupByPayload<T extends WexelGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WexelGroupByOutputType, T['by']> & {
      [P in keyof T & keyof WexelGroupByOutputType]: P extends '_count'
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], WexelGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], WexelGroupByOutputType[P]>;
    }
  >
>;

export type WexelWhereInput = {
  AND?: Prisma.WexelWhereInput | Prisma.WexelWhereInput[];
  OR?: Prisma.WexelWhereInput[];
  NOT?: Prisma.WexelWhereInput | Prisma.WexelWhereInput[];
  id?: Prisma.BigIntFilter<'Wexel'> | bigint | number;
  owner_solana?: Prisma.StringNullableFilter<'Wexel'> | string | null;
  owner_tron?: Prisma.StringNullableFilter<'Wexel'> | string | null;
  pool_id?: Prisma.IntFilter<'Wexel'> | number;
  principal_usd?: Prisma.BigIntFilter<'Wexel'> | bigint | number;
  apy_base_bp?: Prisma.IntFilter<'Wexel'> | number;
  apy_boost_bp?: Prisma.IntFilter<'Wexel'> | number;
  start_ts?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
  end_ts?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
  is_collateralized?: Prisma.BoolFilter<'Wexel'> | boolean;
  total_claimed_usd?: Prisma.BigIntFilter<'Wexel'> | bigint | number;
  nft_mint_address?: Prisma.StringNullableFilter<'Wexel'> | string | null;
  nft_token_address?: Prisma.StringNullableFilter<'Wexel'> | string | null;
  created_at?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
  updated_at?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
  pool?: Prisma.XOR<Prisma.PoolScalarRelationFilter, Prisma.PoolWhereInput>;
  collateral_position?: Prisma.XOR<
    Prisma.CollateralPositionNullableScalarRelationFilter,
    Prisma.CollateralPositionWhereInput
  > | null;
  listings?: Prisma.ListingListRelationFilter;
  claims?: Prisma.ClaimListRelationFilter;
  boosts?: Prisma.BoostListRelationFilter;
};

export type WexelOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  owner_solana?: Prisma.SortOrderInput | Prisma.SortOrder;
  owner_tron?: Prisma.SortOrderInput | Prisma.SortOrder;
  pool_id?: Prisma.SortOrder;
  principal_usd?: Prisma.SortOrder;
  apy_base_bp?: Prisma.SortOrder;
  apy_boost_bp?: Prisma.SortOrder;
  start_ts?: Prisma.SortOrder;
  end_ts?: Prisma.SortOrder;
  is_collateralized?: Prisma.SortOrder;
  total_claimed_usd?: Prisma.SortOrder;
  nft_mint_address?: Prisma.SortOrderInput | Prisma.SortOrder;
  nft_token_address?: Prisma.SortOrderInput | Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
  pool?: Prisma.PoolOrderByWithRelationInput;
  collateral_position?: Prisma.CollateralPositionOrderByWithRelationInput;
  listings?: Prisma.ListingOrderByRelationAggregateInput;
  claims?: Prisma.ClaimOrderByRelationAggregateInput;
  boosts?: Prisma.BoostOrderByRelationAggregateInput;
};

export type WexelWhereUniqueInput = Prisma.AtLeast<
  {
    id?: bigint | number;
    AND?: Prisma.WexelWhereInput | Prisma.WexelWhereInput[];
    OR?: Prisma.WexelWhereInput[];
    NOT?: Prisma.WexelWhereInput | Prisma.WexelWhereInput[];
    owner_solana?: Prisma.StringNullableFilter<'Wexel'> | string | null;
    owner_tron?: Prisma.StringNullableFilter<'Wexel'> | string | null;
    pool_id?: Prisma.IntFilter<'Wexel'> | number;
    principal_usd?: Prisma.BigIntFilter<'Wexel'> | bigint | number;
    apy_base_bp?: Prisma.IntFilter<'Wexel'> | number;
    apy_boost_bp?: Prisma.IntFilter<'Wexel'> | number;
    start_ts?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
    end_ts?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
    is_collateralized?: Prisma.BoolFilter<'Wexel'> | boolean;
    total_claimed_usd?: Prisma.BigIntFilter<'Wexel'> | bigint | number;
    nft_mint_address?: Prisma.StringNullableFilter<'Wexel'> | string | null;
    nft_token_address?: Prisma.StringNullableFilter<'Wexel'> | string | null;
    created_at?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
    updated_at?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
    pool?: Prisma.XOR<Prisma.PoolScalarRelationFilter, Prisma.PoolWhereInput>;
    collateral_position?: Prisma.XOR<
      Prisma.CollateralPositionNullableScalarRelationFilter,
      Prisma.CollateralPositionWhereInput
    > | null;
    listings?: Prisma.ListingListRelationFilter;
    claims?: Prisma.ClaimListRelationFilter;
    boosts?: Prisma.BoostListRelationFilter;
  },
  'id'
>;

export type WexelOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  owner_solana?: Prisma.SortOrderInput | Prisma.SortOrder;
  owner_tron?: Prisma.SortOrderInput | Prisma.SortOrder;
  pool_id?: Prisma.SortOrder;
  principal_usd?: Prisma.SortOrder;
  apy_base_bp?: Prisma.SortOrder;
  apy_boost_bp?: Prisma.SortOrder;
  start_ts?: Prisma.SortOrder;
  end_ts?: Prisma.SortOrder;
  is_collateralized?: Prisma.SortOrder;
  total_claimed_usd?: Prisma.SortOrder;
  nft_mint_address?: Prisma.SortOrderInput | Prisma.SortOrder;
  nft_token_address?: Prisma.SortOrderInput | Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
  _count?: Prisma.WexelCountOrderByAggregateInput;
  _avg?: Prisma.WexelAvgOrderByAggregateInput;
  _max?: Prisma.WexelMaxOrderByAggregateInput;
  _min?: Prisma.WexelMinOrderByAggregateInput;
  _sum?: Prisma.WexelSumOrderByAggregateInput;
};

export type WexelScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.WexelScalarWhereWithAggregatesInput
    | Prisma.WexelScalarWhereWithAggregatesInput[];
  OR?: Prisma.WexelScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.WexelScalarWhereWithAggregatesInput
    | Prisma.WexelScalarWhereWithAggregatesInput[];
  id?: Prisma.BigIntWithAggregatesFilter<'Wexel'> | bigint | number;
  owner_solana?:
    | Prisma.StringNullableWithAggregatesFilter<'Wexel'>
    | string
    | null;
  owner_tron?:
    | Prisma.StringNullableWithAggregatesFilter<'Wexel'>
    | string
    | null;
  pool_id?: Prisma.IntWithAggregatesFilter<'Wexel'> | number;
  principal_usd?: Prisma.BigIntWithAggregatesFilter<'Wexel'> | bigint | number;
  apy_base_bp?: Prisma.IntWithAggregatesFilter<'Wexel'> | number;
  apy_boost_bp?: Prisma.IntWithAggregatesFilter<'Wexel'> | number;
  start_ts?: Prisma.DateTimeWithAggregatesFilter<'Wexel'> | Date | string;
  end_ts?: Prisma.DateTimeWithAggregatesFilter<'Wexel'> | Date | string;
  is_collateralized?: Prisma.BoolWithAggregatesFilter<'Wexel'> | boolean;
  total_claimed_usd?:
    | Prisma.BigIntWithAggregatesFilter<'Wexel'>
    | bigint
    | number;
  nft_mint_address?:
    | Prisma.StringNullableWithAggregatesFilter<'Wexel'>
    | string
    | null;
  nft_token_address?:
    | Prisma.StringNullableWithAggregatesFilter<'Wexel'>
    | string
    | null;
  created_at?: Prisma.DateTimeWithAggregatesFilter<'Wexel'> | Date | string;
  updated_at?: Prisma.DateTimeWithAggregatesFilter<'Wexel'> | Date | string;
};

export type WexelCreateInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  pool: Prisma.PoolCreateNestedOneWithoutWexelsInput;
  collateral_position?: Prisma.CollateralPositionCreateNestedOneWithoutWexelInput;
  listings?: Prisma.ListingCreateNestedManyWithoutWexelInput;
  claims?: Prisma.ClaimCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostCreateNestedManyWithoutWexelInput;
};

export type WexelUncheckedCreateInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  pool_id: number;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedCreateNestedOneWithoutWexelInput;
  listings?: Prisma.ListingUncheckedCreateNestedManyWithoutWexelInput;
  claims?: Prisma.ClaimUncheckedCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostUncheckedCreateNestedManyWithoutWexelInput;
};

export type WexelUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  pool?: Prisma.PoolUpdateOneRequiredWithoutWexelsNestedInput;
  collateral_position?: Prisma.CollateralPositionUpdateOneWithoutWexelNestedInput;
  listings?: Prisma.ListingUpdateManyWithoutWexelNestedInput;
  claims?: Prisma.ClaimUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUpdateManyWithoutWexelNestedInput;
};

export type WexelUncheckedUpdateInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  pool_id?: Prisma.IntFieldUpdateOperationsInput | number;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedUpdateOneWithoutWexelNestedInput;
  listings?: Prisma.ListingUncheckedUpdateManyWithoutWexelNestedInput;
  claims?: Prisma.ClaimUncheckedUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUncheckedUpdateManyWithoutWexelNestedInput;
};

export type WexelCreateManyInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  pool_id: number;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
};

export type WexelUpdateManyMutationInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WexelUncheckedUpdateManyInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  pool_id?: Prisma.IntFieldUpdateOperationsInput | number;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WexelListRelationFilter = {
  every?: Prisma.WexelWhereInput;
  some?: Prisma.WexelWhereInput;
  none?: Prisma.WexelWhereInput;
};

export type WexelOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type WexelCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  owner_solana?: Prisma.SortOrder;
  owner_tron?: Prisma.SortOrder;
  pool_id?: Prisma.SortOrder;
  principal_usd?: Prisma.SortOrder;
  apy_base_bp?: Prisma.SortOrder;
  apy_boost_bp?: Prisma.SortOrder;
  start_ts?: Prisma.SortOrder;
  end_ts?: Prisma.SortOrder;
  is_collateralized?: Prisma.SortOrder;
  total_claimed_usd?: Prisma.SortOrder;
  nft_mint_address?: Prisma.SortOrder;
  nft_token_address?: Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
};

export type WexelAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  pool_id?: Prisma.SortOrder;
  principal_usd?: Prisma.SortOrder;
  apy_base_bp?: Prisma.SortOrder;
  apy_boost_bp?: Prisma.SortOrder;
  total_claimed_usd?: Prisma.SortOrder;
};

export type WexelMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  owner_solana?: Prisma.SortOrder;
  owner_tron?: Prisma.SortOrder;
  pool_id?: Prisma.SortOrder;
  principal_usd?: Prisma.SortOrder;
  apy_base_bp?: Prisma.SortOrder;
  apy_boost_bp?: Prisma.SortOrder;
  start_ts?: Prisma.SortOrder;
  end_ts?: Prisma.SortOrder;
  is_collateralized?: Prisma.SortOrder;
  total_claimed_usd?: Prisma.SortOrder;
  nft_mint_address?: Prisma.SortOrder;
  nft_token_address?: Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
};

export type WexelMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  owner_solana?: Prisma.SortOrder;
  owner_tron?: Prisma.SortOrder;
  pool_id?: Prisma.SortOrder;
  principal_usd?: Prisma.SortOrder;
  apy_base_bp?: Prisma.SortOrder;
  apy_boost_bp?: Prisma.SortOrder;
  start_ts?: Prisma.SortOrder;
  end_ts?: Prisma.SortOrder;
  is_collateralized?: Prisma.SortOrder;
  total_claimed_usd?: Prisma.SortOrder;
  nft_mint_address?: Prisma.SortOrder;
  nft_token_address?: Prisma.SortOrder;
  created_at?: Prisma.SortOrder;
  updated_at?: Prisma.SortOrder;
};

export type WexelSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  pool_id?: Prisma.SortOrder;
  principal_usd?: Prisma.SortOrder;
  apy_base_bp?: Prisma.SortOrder;
  apy_boost_bp?: Prisma.SortOrder;
  total_claimed_usd?: Prisma.SortOrder;
};

export type WexelScalarRelationFilter = {
  is?: Prisma.WexelWhereInput;
  isNot?: Prisma.WexelWhereInput;
};

export type WexelCreateNestedManyWithoutPoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.WexelCreateWithoutPoolInput,
        Prisma.WexelUncheckedCreateWithoutPoolInput
      >
    | Prisma.WexelCreateWithoutPoolInput[]
    | Prisma.WexelUncheckedCreateWithoutPoolInput[];
  connectOrCreate?:
    | Prisma.WexelCreateOrConnectWithoutPoolInput
    | Prisma.WexelCreateOrConnectWithoutPoolInput[];
  createMany?: Prisma.WexelCreateManyPoolInputEnvelope;
  connect?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
};

export type WexelUncheckedCreateNestedManyWithoutPoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.WexelCreateWithoutPoolInput,
        Prisma.WexelUncheckedCreateWithoutPoolInput
      >
    | Prisma.WexelCreateWithoutPoolInput[]
    | Prisma.WexelUncheckedCreateWithoutPoolInput[];
  connectOrCreate?:
    | Prisma.WexelCreateOrConnectWithoutPoolInput
    | Prisma.WexelCreateOrConnectWithoutPoolInput[];
  createMany?: Prisma.WexelCreateManyPoolInputEnvelope;
  connect?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
};

export type WexelUpdateManyWithoutPoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WexelCreateWithoutPoolInput,
        Prisma.WexelUncheckedCreateWithoutPoolInput
      >
    | Prisma.WexelCreateWithoutPoolInput[]
    | Prisma.WexelUncheckedCreateWithoutPoolInput[];
  connectOrCreate?:
    | Prisma.WexelCreateOrConnectWithoutPoolInput
    | Prisma.WexelCreateOrConnectWithoutPoolInput[];
  upsert?:
    | Prisma.WexelUpsertWithWhereUniqueWithoutPoolInput
    | Prisma.WexelUpsertWithWhereUniqueWithoutPoolInput[];
  createMany?: Prisma.WexelCreateManyPoolInputEnvelope;
  set?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
  disconnect?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
  delete?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
  connect?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
  update?:
    | Prisma.WexelUpdateWithWhereUniqueWithoutPoolInput
    | Prisma.WexelUpdateWithWhereUniqueWithoutPoolInput[];
  updateMany?:
    | Prisma.WexelUpdateManyWithWhereWithoutPoolInput
    | Prisma.WexelUpdateManyWithWhereWithoutPoolInput[];
  deleteMany?: Prisma.WexelScalarWhereInput | Prisma.WexelScalarWhereInput[];
};

export type WexelUncheckedUpdateManyWithoutPoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WexelCreateWithoutPoolInput,
        Prisma.WexelUncheckedCreateWithoutPoolInput
      >
    | Prisma.WexelCreateWithoutPoolInput[]
    | Prisma.WexelUncheckedCreateWithoutPoolInput[];
  connectOrCreate?:
    | Prisma.WexelCreateOrConnectWithoutPoolInput
    | Prisma.WexelCreateOrConnectWithoutPoolInput[];
  upsert?:
    | Prisma.WexelUpsertWithWhereUniqueWithoutPoolInput
    | Prisma.WexelUpsertWithWhereUniqueWithoutPoolInput[];
  createMany?: Prisma.WexelCreateManyPoolInputEnvelope;
  set?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
  disconnect?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
  delete?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
  connect?: Prisma.WexelWhereUniqueInput | Prisma.WexelWhereUniqueInput[];
  update?:
    | Prisma.WexelUpdateWithWhereUniqueWithoutPoolInput
    | Prisma.WexelUpdateWithWhereUniqueWithoutPoolInput[];
  updateMany?:
    | Prisma.WexelUpdateManyWithWhereWithoutPoolInput
    | Prisma.WexelUpdateManyWithWhereWithoutPoolInput[];
  deleteMany?: Prisma.WexelScalarWhereInput | Prisma.WexelScalarWhereInput[];
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null;
};

export type WexelCreateNestedOneWithoutCollateral_positionInput = {
  create?: Prisma.XOR<
    Prisma.WexelCreateWithoutCollateral_positionInput,
    Prisma.WexelUncheckedCreateWithoutCollateral_positionInput
  >;
  connectOrCreate?: Prisma.WexelCreateOrConnectWithoutCollateral_positionInput;
  connect?: Prisma.WexelWhereUniqueInput;
};

export type WexelUpdateOneRequiredWithoutCollateral_positionNestedInput = {
  create?: Prisma.XOR<
    Prisma.WexelCreateWithoutCollateral_positionInput,
    Prisma.WexelUncheckedCreateWithoutCollateral_positionInput
  >;
  connectOrCreate?: Prisma.WexelCreateOrConnectWithoutCollateral_positionInput;
  upsert?: Prisma.WexelUpsertWithoutCollateral_positionInput;
  connect?: Prisma.WexelWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WexelUpdateToOneWithWhereWithoutCollateral_positionInput,
      Prisma.WexelUpdateWithoutCollateral_positionInput
    >,
    Prisma.WexelUncheckedUpdateWithoutCollateral_positionInput
  >;
};

export type WexelCreateNestedOneWithoutListingsInput = {
  create?: Prisma.XOR<
    Prisma.WexelCreateWithoutListingsInput,
    Prisma.WexelUncheckedCreateWithoutListingsInput
  >;
  connectOrCreate?: Prisma.WexelCreateOrConnectWithoutListingsInput;
  connect?: Prisma.WexelWhereUniqueInput;
};

export type WexelUpdateOneRequiredWithoutListingsNestedInput = {
  create?: Prisma.XOR<
    Prisma.WexelCreateWithoutListingsInput,
    Prisma.WexelUncheckedCreateWithoutListingsInput
  >;
  connectOrCreate?: Prisma.WexelCreateOrConnectWithoutListingsInput;
  upsert?: Prisma.WexelUpsertWithoutListingsInput;
  connect?: Prisma.WexelWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WexelUpdateToOneWithWhereWithoutListingsInput,
      Prisma.WexelUpdateWithoutListingsInput
    >,
    Prisma.WexelUncheckedUpdateWithoutListingsInput
  >;
};

export type WexelCreateNestedOneWithoutClaimsInput = {
  create?: Prisma.XOR<
    Prisma.WexelCreateWithoutClaimsInput,
    Prisma.WexelUncheckedCreateWithoutClaimsInput
  >;
  connectOrCreate?: Prisma.WexelCreateOrConnectWithoutClaimsInput;
  connect?: Prisma.WexelWhereUniqueInput;
};

export type WexelUpdateOneRequiredWithoutClaimsNestedInput = {
  create?: Prisma.XOR<
    Prisma.WexelCreateWithoutClaimsInput,
    Prisma.WexelUncheckedCreateWithoutClaimsInput
  >;
  connectOrCreate?: Prisma.WexelCreateOrConnectWithoutClaimsInput;
  upsert?: Prisma.WexelUpsertWithoutClaimsInput;
  connect?: Prisma.WexelWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WexelUpdateToOneWithWhereWithoutClaimsInput,
      Prisma.WexelUpdateWithoutClaimsInput
    >,
    Prisma.WexelUncheckedUpdateWithoutClaimsInput
  >;
};

export type WexelCreateNestedOneWithoutBoostsInput = {
  create?: Prisma.XOR<
    Prisma.WexelCreateWithoutBoostsInput,
    Prisma.WexelUncheckedCreateWithoutBoostsInput
  >;
  connectOrCreate?: Prisma.WexelCreateOrConnectWithoutBoostsInput;
  connect?: Prisma.WexelWhereUniqueInput;
};

export type WexelUpdateOneRequiredWithoutBoostsNestedInput = {
  create?: Prisma.XOR<
    Prisma.WexelCreateWithoutBoostsInput,
    Prisma.WexelUncheckedCreateWithoutBoostsInput
  >;
  connectOrCreate?: Prisma.WexelCreateOrConnectWithoutBoostsInput;
  upsert?: Prisma.WexelUpsertWithoutBoostsInput;
  connect?: Prisma.WexelWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WexelUpdateToOneWithWhereWithoutBoostsInput,
      Prisma.WexelUpdateWithoutBoostsInput
    >,
    Prisma.WexelUncheckedUpdateWithoutBoostsInput
  >;
};

export type WexelCreateWithoutPoolInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  collateral_position?: Prisma.CollateralPositionCreateNestedOneWithoutWexelInput;
  listings?: Prisma.ListingCreateNestedManyWithoutWexelInput;
  claims?: Prisma.ClaimCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostCreateNestedManyWithoutWexelInput;
};

export type WexelUncheckedCreateWithoutPoolInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedCreateNestedOneWithoutWexelInput;
  listings?: Prisma.ListingUncheckedCreateNestedManyWithoutWexelInput;
  claims?: Prisma.ClaimUncheckedCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostUncheckedCreateNestedManyWithoutWexelInput;
};

export type WexelCreateOrConnectWithoutPoolInput = {
  where: Prisma.WexelWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutPoolInput,
    Prisma.WexelUncheckedCreateWithoutPoolInput
  >;
};

export type WexelCreateManyPoolInputEnvelope = {
  data: Prisma.WexelCreateManyPoolInput | Prisma.WexelCreateManyPoolInput[];
  skipDuplicates?: boolean;
};

export type WexelUpsertWithWhereUniqueWithoutPoolInput = {
  where: Prisma.WexelWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.WexelUpdateWithoutPoolInput,
    Prisma.WexelUncheckedUpdateWithoutPoolInput
  >;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutPoolInput,
    Prisma.WexelUncheckedCreateWithoutPoolInput
  >;
};

export type WexelUpdateWithWhereUniqueWithoutPoolInput = {
  where: Prisma.WexelWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.WexelUpdateWithoutPoolInput,
    Prisma.WexelUncheckedUpdateWithoutPoolInput
  >;
};

export type WexelUpdateManyWithWhereWithoutPoolInput = {
  where: Prisma.WexelScalarWhereInput;
  data: Prisma.XOR<
    Prisma.WexelUpdateManyMutationInput,
    Prisma.WexelUncheckedUpdateManyWithoutPoolInput
  >;
};

export type WexelScalarWhereInput = {
  AND?: Prisma.WexelScalarWhereInput | Prisma.WexelScalarWhereInput[];
  OR?: Prisma.WexelScalarWhereInput[];
  NOT?: Prisma.WexelScalarWhereInput | Prisma.WexelScalarWhereInput[];
  id?: Prisma.BigIntFilter<'Wexel'> | bigint | number;
  owner_solana?: Prisma.StringNullableFilter<'Wexel'> | string | null;
  owner_tron?: Prisma.StringNullableFilter<'Wexel'> | string | null;
  pool_id?: Prisma.IntFilter<'Wexel'> | number;
  principal_usd?: Prisma.BigIntFilter<'Wexel'> | bigint | number;
  apy_base_bp?: Prisma.IntFilter<'Wexel'> | number;
  apy_boost_bp?: Prisma.IntFilter<'Wexel'> | number;
  start_ts?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
  end_ts?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
  is_collateralized?: Prisma.BoolFilter<'Wexel'> | boolean;
  total_claimed_usd?: Prisma.BigIntFilter<'Wexel'> | bigint | number;
  nft_mint_address?: Prisma.StringNullableFilter<'Wexel'> | string | null;
  nft_token_address?: Prisma.StringNullableFilter<'Wexel'> | string | null;
  created_at?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
  updated_at?: Prisma.DateTimeFilter<'Wexel'> | Date | string;
};

export type WexelCreateWithoutCollateral_positionInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  pool: Prisma.PoolCreateNestedOneWithoutWexelsInput;
  listings?: Prisma.ListingCreateNestedManyWithoutWexelInput;
  claims?: Prisma.ClaimCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostCreateNestedManyWithoutWexelInput;
};

export type WexelUncheckedCreateWithoutCollateral_positionInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  pool_id: number;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  listings?: Prisma.ListingUncheckedCreateNestedManyWithoutWexelInput;
  claims?: Prisma.ClaimUncheckedCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostUncheckedCreateNestedManyWithoutWexelInput;
};

export type WexelCreateOrConnectWithoutCollateral_positionInput = {
  where: Prisma.WexelWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutCollateral_positionInput,
    Prisma.WexelUncheckedCreateWithoutCollateral_positionInput
  >;
};

export type WexelUpsertWithoutCollateral_positionInput = {
  update: Prisma.XOR<
    Prisma.WexelUpdateWithoutCollateral_positionInput,
    Prisma.WexelUncheckedUpdateWithoutCollateral_positionInput
  >;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutCollateral_positionInput,
    Prisma.WexelUncheckedCreateWithoutCollateral_positionInput
  >;
  where?: Prisma.WexelWhereInput;
};

export type WexelUpdateToOneWithWhereWithoutCollateral_positionInput = {
  where?: Prisma.WexelWhereInput;
  data: Prisma.XOR<
    Prisma.WexelUpdateWithoutCollateral_positionInput,
    Prisma.WexelUncheckedUpdateWithoutCollateral_positionInput
  >;
};

export type WexelUpdateWithoutCollateral_positionInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  pool?: Prisma.PoolUpdateOneRequiredWithoutWexelsNestedInput;
  listings?: Prisma.ListingUpdateManyWithoutWexelNestedInput;
  claims?: Prisma.ClaimUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUpdateManyWithoutWexelNestedInput;
};

export type WexelUncheckedUpdateWithoutCollateral_positionInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  pool_id?: Prisma.IntFieldUpdateOperationsInput | number;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  listings?: Prisma.ListingUncheckedUpdateManyWithoutWexelNestedInput;
  claims?: Prisma.ClaimUncheckedUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUncheckedUpdateManyWithoutWexelNestedInput;
};

export type WexelCreateWithoutListingsInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  pool: Prisma.PoolCreateNestedOneWithoutWexelsInput;
  collateral_position?: Prisma.CollateralPositionCreateNestedOneWithoutWexelInput;
  claims?: Prisma.ClaimCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostCreateNestedManyWithoutWexelInput;
};

export type WexelUncheckedCreateWithoutListingsInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  pool_id: number;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedCreateNestedOneWithoutWexelInput;
  claims?: Prisma.ClaimUncheckedCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostUncheckedCreateNestedManyWithoutWexelInput;
};

export type WexelCreateOrConnectWithoutListingsInput = {
  where: Prisma.WexelWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutListingsInput,
    Prisma.WexelUncheckedCreateWithoutListingsInput
  >;
};

export type WexelUpsertWithoutListingsInput = {
  update: Prisma.XOR<
    Prisma.WexelUpdateWithoutListingsInput,
    Prisma.WexelUncheckedUpdateWithoutListingsInput
  >;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutListingsInput,
    Prisma.WexelUncheckedCreateWithoutListingsInput
  >;
  where?: Prisma.WexelWhereInput;
};

export type WexelUpdateToOneWithWhereWithoutListingsInput = {
  where?: Prisma.WexelWhereInput;
  data: Prisma.XOR<
    Prisma.WexelUpdateWithoutListingsInput,
    Prisma.WexelUncheckedUpdateWithoutListingsInput
  >;
};

export type WexelUpdateWithoutListingsInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  pool?: Prisma.PoolUpdateOneRequiredWithoutWexelsNestedInput;
  collateral_position?: Prisma.CollateralPositionUpdateOneWithoutWexelNestedInput;
  claims?: Prisma.ClaimUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUpdateManyWithoutWexelNestedInput;
};

export type WexelUncheckedUpdateWithoutListingsInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  pool_id?: Prisma.IntFieldUpdateOperationsInput | number;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedUpdateOneWithoutWexelNestedInput;
  claims?: Prisma.ClaimUncheckedUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUncheckedUpdateManyWithoutWexelNestedInput;
};

export type WexelCreateWithoutClaimsInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  pool: Prisma.PoolCreateNestedOneWithoutWexelsInput;
  collateral_position?: Prisma.CollateralPositionCreateNestedOneWithoutWexelInput;
  listings?: Prisma.ListingCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostCreateNestedManyWithoutWexelInput;
};

export type WexelUncheckedCreateWithoutClaimsInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  pool_id: number;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedCreateNestedOneWithoutWexelInput;
  listings?: Prisma.ListingUncheckedCreateNestedManyWithoutWexelInput;
  boosts?: Prisma.BoostUncheckedCreateNestedManyWithoutWexelInput;
};

export type WexelCreateOrConnectWithoutClaimsInput = {
  where: Prisma.WexelWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutClaimsInput,
    Prisma.WexelUncheckedCreateWithoutClaimsInput
  >;
};

export type WexelUpsertWithoutClaimsInput = {
  update: Prisma.XOR<
    Prisma.WexelUpdateWithoutClaimsInput,
    Prisma.WexelUncheckedUpdateWithoutClaimsInput
  >;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutClaimsInput,
    Prisma.WexelUncheckedCreateWithoutClaimsInput
  >;
  where?: Prisma.WexelWhereInput;
};

export type WexelUpdateToOneWithWhereWithoutClaimsInput = {
  where?: Prisma.WexelWhereInput;
  data: Prisma.XOR<
    Prisma.WexelUpdateWithoutClaimsInput,
    Prisma.WexelUncheckedUpdateWithoutClaimsInput
  >;
};

export type WexelUpdateWithoutClaimsInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  pool?: Prisma.PoolUpdateOneRequiredWithoutWexelsNestedInput;
  collateral_position?: Prisma.CollateralPositionUpdateOneWithoutWexelNestedInput;
  listings?: Prisma.ListingUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUpdateManyWithoutWexelNestedInput;
};

export type WexelUncheckedUpdateWithoutClaimsInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  pool_id?: Prisma.IntFieldUpdateOperationsInput | number;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedUpdateOneWithoutWexelNestedInput;
  listings?: Prisma.ListingUncheckedUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUncheckedUpdateManyWithoutWexelNestedInput;
};

export type WexelCreateWithoutBoostsInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  pool: Prisma.PoolCreateNestedOneWithoutWexelsInput;
  collateral_position?: Prisma.CollateralPositionCreateNestedOneWithoutWexelInput;
  listings?: Prisma.ListingCreateNestedManyWithoutWexelInput;
  claims?: Prisma.ClaimCreateNestedManyWithoutWexelInput;
};

export type WexelUncheckedCreateWithoutBoostsInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  pool_id: number;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedCreateNestedOneWithoutWexelInput;
  listings?: Prisma.ListingUncheckedCreateNestedManyWithoutWexelInput;
  claims?: Prisma.ClaimUncheckedCreateNestedManyWithoutWexelInput;
};

export type WexelCreateOrConnectWithoutBoostsInput = {
  where: Prisma.WexelWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutBoostsInput,
    Prisma.WexelUncheckedCreateWithoutBoostsInput
  >;
};

export type WexelUpsertWithoutBoostsInput = {
  update: Prisma.XOR<
    Prisma.WexelUpdateWithoutBoostsInput,
    Prisma.WexelUncheckedUpdateWithoutBoostsInput
  >;
  create: Prisma.XOR<
    Prisma.WexelCreateWithoutBoostsInput,
    Prisma.WexelUncheckedCreateWithoutBoostsInput
  >;
  where?: Prisma.WexelWhereInput;
};

export type WexelUpdateToOneWithWhereWithoutBoostsInput = {
  where?: Prisma.WexelWhereInput;
  data: Prisma.XOR<
    Prisma.WexelUpdateWithoutBoostsInput,
    Prisma.WexelUncheckedUpdateWithoutBoostsInput
  >;
};

export type WexelUpdateWithoutBoostsInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  pool?: Prisma.PoolUpdateOneRequiredWithoutWexelsNestedInput;
  collateral_position?: Prisma.CollateralPositionUpdateOneWithoutWexelNestedInput;
  listings?: Prisma.ListingUpdateManyWithoutWexelNestedInput;
  claims?: Prisma.ClaimUpdateManyWithoutWexelNestedInput;
};

export type WexelUncheckedUpdateWithoutBoostsInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  pool_id?: Prisma.IntFieldUpdateOperationsInput | number;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedUpdateOneWithoutWexelNestedInput;
  listings?: Prisma.ListingUncheckedUpdateManyWithoutWexelNestedInput;
  claims?: Prisma.ClaimUncheckedUpdateManyWithoutWexelNestedInput;
};

export type WexelCreateManyPoolInput = {
  id?: bigint | number;
  owner_solana?: string | null;
  owner_tron?: string | null;
  principal_usd: bigint | number;
  apy_base_bp: number;
  apy_boost_bp?: number;
  start_ts: Date | string;
  end_ts: Date | string;
  is_collateralized?: boolean;
  total_claimed_usd?: bigint | number;
  nft_mint_address?: string | null;
  nft_token_address?: string | null;
  created_at?: Date | string;
  updated_at?: Date | string;
};

export type WexelUpdateWithoutPoolInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  collateral_position?: Prisma.CollateralPositionUpdateOneWithoutWexelNestedInput;
  listings?: Prisma.ListingUpdateManyWithoutWexelNestedInput;
  claims?: Prisma.ClaimUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUpdateManyWithoutWexelNestedInput;
};

export type WexelUncheckedUpdateWithoutPoolInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  collateral_position?: Prisma.CollateralPositionUncheckedUpdateOneWithoutWexelNestedInput;
  listings?: Prisma.ListingUncheckedUpdateManyWithoutWexelNestedInput;
  claims?: Prisma.ClaimUncheckedUpdateManyWithoutWexelNestedInput;
  boosts?: Prisma.BoostUncheckedUpdateManyWithoutWexelNestedInput;
};

export type WexelUncheckedUpdateManyWithoutPoolInput = {
  id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  owner_solana?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  owner_tron?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  principal_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  apy_base_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  apy_boost_bp?: Prisma.IntFieldUpdateOperationsInput | number;
  start_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  end_ts?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  is_collateralized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  total_claimed_usd?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number;
  nft_mint_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  nft_token_address?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type WexelCountOutputType
 */

export type WexelCountOutputType = {
  listings: number;
  claims: number;
  boosts: number;
};

export type WexelCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  listings?: boolean | WexelCountOutputTypeCountListingsArgs;
  claims?: boolean | WexelCountOutputTypeCountClaimsArgs;
  boosts?: boolean | WexelCountOutputTypeCountBoostsArgs;
};

/**
 * WexelCountOutputType without action
 */
export type WexelCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the WexelCountOutputType
   */
  select?: Prisma.WexelCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * WexelCountOutputType without action
 */
export type WexelCountOutputTypeCountListingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ListingWhereInput;
};

/**
 * WexelCountOutputType without action
 */
export type WexelCountOutputTypeCountClaimsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClaimWhereInput;
};

/**
 * WexelCountOutputType without action
 */
export type WexelCountOutputTypeCountBoostsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.BoostWhereInput;
};

export type WexelSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    owner_solana?: boolean;
    owner_tron?: boolean;
    pool_id?: boolean;
    principal_usd?: boolean;
    apy_base_bp?: boolean;
    apy_boost_bp?: boolean;
    start_ts?: boolean;
    end_ts?: boolean;
    is_collateralized?: boolean;
    total_claimed_usd?: boolean;
    nft_mint_address?: boolean;
    nft_token_address?: boolean;
    created_at?: boolean;
    updated_at?: boolean;
    pool?: boolean | Prisma.PoolDefaultArgs<ExtArgs>;
    collateral_position?:
      | boolean
      | Prisma.Wexel$collateral_positionArgs<ExtArgs>;
    listings?: boolean | Prisma.Wexel$listingsArgs<ExtArgs>;
    claims?: boolean | Prisma.Wexel$claimsArgs<ExtArgs>;
    boosts?: boolean | Prisma.Wexel$boostsArgs<ExtArgs>;
    _count?: boolean | Prisma.WexelCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['wexel']
>;

export type WexelSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    owner_solana?: boolean;
    owner_tron?: boolean;
    pool_id?: boolean;
    principal_usd?: boolean;
    apy_base_bp?: boolean;
    apy_boost_bp?: boolean;
    start_ts?: boolean;
    end_ts?: boolean;
    is_collateralized?: boolean;
    total_claimed_usd?: boolean;
    nft_mint_address?: boolean;
    nft_token_address?: boolean;
    created_at?: boolean;
    updated_at?: boolean;
    pool?: boolean | Prisma.PoolDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['wexel']
>;

export type WexelSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    owner_solana?: boolean;
    owner_tron?: boolean;
    pool_id?: boolean;
    principal_usd?: boolean;
    apy_base_bp?: boolean;
    apy_boost_bp?: boolean;
    start_ts?: boolean;
    end_ts?: boolean;
    is_collateralized?: boolean;
    total_claimed_usd?: boolean;
    nft_mint_address?: boolean;
    nft_token_address?: boolean;
    created_at?: boolean;
    updated_at?: boolean;
    pool?: boolean | Prisma.PoolDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['wexel']
>;

export type WexelSelectScalar = {
  id?: boolean;
  owner_solana?: boolean;
  owner_tron?: boolean;
  pool_id?: boolean;
  principal_usd?: boolean;
  apy_base_bp?: boolean;
  apy_boost_bp?: boolean;
  start_ts?: boolean;
  end_ts?: boolean;
  is_collateralized?: boolean;
  total_claimed_usd?: boolean;
  nft_mint_address?: boolean;
  nft_token_address?: boolean;
  created_at?: boolean;
  updated_at?: boolean;
};

export type WexelOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'owner_solana'
  | 'owner_tron'
  | 'pool_id'
  | 'principal_usd'
  | 'apy_base_bp'
  | 'apy_boost_bp'
  | 'start_ts'
  | 'end_ts'
  | 'is_collateralized'
  | 'total_claimed_usd'
  | 'nft_mint_address'
  | 'nft_token_address'
  | 'created_at'
  | 'updated_at',
  ExtArgs['result']['wexel']
>;
export type WexelInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  pool?: boolean | Prisma.PoolDefaultArgs<ExtArgs>;
  collateral_position?: boolean | Prisma.Wexel$collateral_positionArgs<ExtArgs>;
  listings?: boolean | Prisma.Wexel$listingsArgs<ExtArgs>;
  claims?: boolean | Prisma.Wexel$claimsArgs<ExtArgs>;
  boosts?: boolean | Prisma.Wexel$boostsArgs<ExtArgs>;
  _count?: boolean | Prisma.WexelCountOutputTypeDefaultArgs<ExtArgs>;
};
export type WexelIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  pool?: boolean | Prisma.PoolDefaultArgs<ExtArgs>;
};
export type WexelIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  pool?: boolean | Prisma.PoolDefaultArgs<ExtArgs>;
};

export type $WexelPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'Wexel';
  objects: {
    pool: Prisma.$PoolPayload<ExtArgs>;
    collateral_position: Prisma.$CollateralPositionPayload<ExtArgs> | null;
    listings: Prisma.$ListingPayload<ExtArgs>[];
    claims: Prisma.$ClaimPayload<ExtArgs>[];
    boosts: Prisma.$BoostPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: bigint;
      owner_solana: string | null;
      owner_tron: string | null;
      pool_id: number;
      principal_usd: bigint;
      apy_base_bp: number;
      apy_boost_bp: number;
      start_ts: Date;
      end_ts: Date;
      is_collateralized: boolean;
      total_claimed_usd: bigint;
      nft_mint_address: string | null;
      nft_token_address: string | null;
      created_at: Date;
      updated_at: Date;
    },
    ExtArgs['result']['wexel']
  >;
  composites: {};
};

export type WexelGetPayload<
  S extends boolean | null | undefined | WexelDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$WexelPayload, S>;

export type WexelCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<WexelFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: WexelCountAggregateInputType | true;
};

export interface WexelDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['Wexel'];
    meta: { name: 'Wexel' };
  };
  /**
   * Find zero or one Wexel that matches the filter.
   * @param {WexelFindUniqueArgs} args - Arguments to find a Wexel
   * @example
   * // Get one Wexel
   * const wexel = await prisma.wexel.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WexelFindUniqueArgs>(
    args: Prisma.SelectSubset<T, WexelFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__WexelClient<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Wexel that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WexelFindUniqueOrThrowArgs} args - Arguments to find a Wexel
   * @example
   * // Get one Wexel
   * const wexel = await prisma.wexel.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WexelFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, WexelFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__WexelClient<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Wexel that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WexelFindFirstArgs} args - Arguments to find a Wexel
   * @example
   * // Get one Wexel
   * const wexel = await prisma.wexel.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WexelFindFirstArgs>(
    args?: Prisma.SelectSubset<T, WexelFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__WexelClient<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Wexel that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WexelFindFirstOrThrowArgs} args - Arguments to find a Wexel
   * @example
   * // Get one Wexel
   * const wexel = await prisma.wexel.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WexelFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, WexelFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__WexelClient<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Wexels that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WexelFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Wexels
   * const wexels = await prisma.wexel.findMany()
   *
   * // Get first 10 Wexels
   * const wexels = await prisma.wexel.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const wexelWithIdOnly = await prisma.wexel.findMany({ select: { id: true } })
   *
   */
  findMany<T extends WexelFindManyArgs>(
    args?: Prisma.SelectSubset<T, WexelFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a Wexel.
   * @param {WexelCreateArgs} args - Arguments to create a Wexel.
   * @example
   * // Create one Wexel
   * const Wexel = await prisma.wexel.create({
   *   data: {
   *     // ... data to create a Wexel
   *   }
   * })
   *
   */
  create<T extends WexelCreateArgs>(
    args: Prisma.SelectSubset<T, WexelCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__WexelClient<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Wexels.
   * @param {WexelCreateManyArgs} args - Arguments to create many Wexels.
   * @example
   * // Create many Wexels
   * const wexel = await prisma.wexel.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends WexelCreateManyArgs>(
    args?: Prisma.SelectSubset<T, WexelCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Wexels and returns the data saved in the database.
   * @param {WexelCreateManyAndReturnArgs} args - Arguments to create many Wexels.
   * @example
   * // Create many Wexels
   * const wexel = await prisma.wexel.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Wexels and only return the `id`
   * const wexelWithIdOnly = await prisma.wexel.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends WexelCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, WexelCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a Wexel.
   * @param {WexelDeleteArgs} args - Arguments to delete one Wexel.
   * @example
   * // Delete one Wexel
   * const Wexel = await prisma.wexel.delete({
   *   where: {
   *     // ... filter to delete one Wexel
   *   }
   * })
   *
   */
  delete<T extends WexelDeleteArgs>(
    args: Prisma.SelectSubset<T, WexelDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__WexelClient<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Wexel.
   * @param {WexelUpdateArgs} args - Arguments to update one Wexel.
   * @example
   * // Update one Wexel
   * const wexel = await prisma.wexel.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends WexelUpdateArgs>(
    args: Prisma.SelectSubset<T, WexelUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__WexelClient<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Wexels.
   * @param {WexelDeleteManyArgs} args - Arguments to filter Wexels to delete.
   * @example
   * // Delete a few Wexels
   * const { count } = await prisma.wexel.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends WexelDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, WexelDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Wexels.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WexelUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Wexels
   * const wexel = await prisma.wexel.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends WexelUpdateManyArgs>(
    args: Prisma.SelectSubset<T, WexelUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Wexels and returns the data updated in the database.
   * @param {WexelUpdateManyAndReturnArgs} args - Arguments to update many Wexels.
   * @example
   * // Update many Wexels
   * const wexel = await prisma.wexel.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Wexels and only return the `id`
   * const wexelWithIdOnly = await prisma.wexel.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends WexelUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, WexelUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one Wexel.
   * @param {WexelUpsertArgs} args - Arguments to update or create a Wexel.
   * @example
   * // Update or create a Wexel
   * const wexel = await prisma.wexel.upsert({
   *   create: {
   *     // ... data to create a Wexel
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Wexel we want to update
   *   }
   * })
   */
  upsert<T extends WexelUpsertArgs>(
    args: Prisma.SelectSubset<T, WexelUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__WexelClient<
    runtime.Types.Result.GetResult<
      Prisma.$WexelPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Wexels.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WexelCountArgs} args - Arguments to filter Wexels to count.
   * @example
   * // Count the number of Wexels
   * const count = await prisma.wexel.count({
   *   where: {
   *     // ... the filter for the Wexels we want to count
   *   }
   * })
   **/
  count<T extends WexelCountArgs>(
    args?: Prisma.Subset<T, WexelCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WexelCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Wexel.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WexelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends WexelAggregateArgs>(
    args: Prisma.Subset<T, WexelAggregateArgs>,
  ): Prisma.PrismaPromise<GetWexelAggregateType<T>>;

  /**
   * Group by Wexel.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WexelGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends WexelGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WexelGroupByArgs['orderBy'] }
      : { orderBy?: WexelGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, WexelGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetWexelGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Wexel model
   */
  readonly fields: WexelFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Wexel.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WexelClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  pool<T extends Prisma.PoolDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.PoolDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__PoolClient<
    | runtime.Types.Result.GetResult<
        Prisma.$PoolPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  collateral_position<
    T extends Prisma.Wexel$collateral_positionArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Wexel$collateral_positionArgs<ExtArgs>>,
  ): Prisma.Prisma__CollateralPositionClient<
    runtime.Types.Result.GetResult<
      Prisma.$CollateralPositionPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  listings<T extends Prisma.Wexel$listingsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Wexel$listingsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ListingPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  claims<T extends Prisma.Wexel$claimsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Wexel$claimsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClaimPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  boosts<T extends Prisma.Wexel$boostsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Wexel$boostsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$BoostPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Wexel model
 */
export interface WexelFieldRefs {
  readonly id: Prisma.FieldRef<'Wexel', 'BigInt'>;
  readonly owner_solana: Prisma.FieldRef<'Wexel', 'String'>;
  readonly owner_tron: Prisma.FieldRef<'Wexel', 'String'>;
  readonly pool_id: Prisma.FieldRef<'Wexel', 'Int'>;
  readonly principal_usd: Prisma.FieldRef<'Wexel', 'BigInt'>;
  readonly apy_base_bp: Prisma.FieldRef<'Wexel', 'Int'>;
  readonly apy_boost_bp: Prisma.FieldRef<'Wexel', 'Int'>;
  readonly start_ts: Prisma.FieldRef<'Wexel', 'DateTime'>;
  readonly end_ts: Prisma.FieldRef<'Wexel', 'DateTime'>;
  readonly is_collateralized: Prisma.FieldRef<'Wexel', 'Boolean'>;
  readonly total_claimed_usd: Prisma.FieldRef<'Wexel', 'BigInt'>;
  readonly nft_mint_address: Prisma.FieldRef<'Wexel', 'String'>;
  readonly nft_token_address: Prisma.FieldRef<'Wexel', 'String'>;
  readonly created_at: Prisma.FieldRef<'Wexel', 'DateTime'>;
  readonly updated_at: Prisma.FieldRef<'Wexel', 'DateTime'>;
}

// Custom InputTypes
/**
 * Wexel findUnique
 */
export type WexelFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * Filter, which Wexel to fetch.
   */
  where: Prisma.WexelWhereUniqueInput;
};

/**
 * Wexel findUniqueOrThrow
 */
export type WexelFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * Filter, which Wexel to fetch.
   */
  where: Prisma.WexelWhereUniqueInput;
};

/**
 * Wexel findFirst
 */
export type WexelFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * Filter, which Wexel to fetch.
   */
  where?: Prisma.WexelWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Wexels to fetch.
   */
  orderBy?:
    | Prisma.WexelOrderByWithRelationInput
    | Prisma.WexelOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Wexels.
   */
  cursor?: Prisma.WexelWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Wexels from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Wexels.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Wexels.
   */
  distinct?: Prisma.WexelScalarFieldEnum | Prisma.WexelScalarFieldEnum[];
};

/**
 * Wexel findFirstOrThrow
 */
export type WexelFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * Filter, which Wexel to fetch.
   */
  where?: Prisma.WexelWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Wexels to fetch.
   */
  orderBy?:
    | Prisma.WexelOrderByWithRelationInput
    | Prisma.WexelOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Wexels.
   */
  cursor?: Prisma.WexelWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Wexels from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Wexels.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Wexels.
   */
  distinct?: Prisma.WexelScalarFieldEnum | Prisma.WexelScalarFieldEnum[];
};

/**
 * Wexel findMany
 */
export type WexelFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * Filter, which Wexels to fetch.
   */
  where?: Prisma.WexelWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Wexels to fetch.
   */
  orderBy?:
    | Prisma.WexelOrderByWithRelationInput
    | Prisma.WexelOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Wexels.
   */
  cursor?: Prisma.WexelWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Wexels from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Wexels.
   */
  skip?: number;
  distinct?: Prisma.WexelScalarFieldEnum | Prisma.WexelScalarFieldEnum[];
};

/**
 * Wexel create
 */
export type WexelCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * The data needed to create a Wexel.
   */
  data: Prisma.XOR<Prisma.WexelCreateInput, Prisma.WexelUncheckedCreateInput>;
};

/**
 * Wexel createMany
 */
export type WexelCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Wexels.
   */
  data: Prisma.WexelCreateManyInput | Prisma.WexelCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Wexel createManyAndReturn
 */
export type WexelCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * The data used to create many Wexels.
   */
  data: Prisma.WexelCreateManyInput | Prisma.WexelCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Wexel update
 */
export type WexelUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * The data needed to update a Wexel.
   */
  data: Prisma.XOR<Prisma.WexelUpdateInput, Prisma.WexelUncheckedUpdateInput>;
  /**
   * Choose, which Wexel to update.
   */
  where: Prisma.WexelWhereUniqueInput;
};

/**
 * Wexel updateMany
 */
export type WexelUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Wexels.
   */
  data: Prisma.XOR<
    Prisma.WexelUpdateManyMutationInput,
    Prisma.WexelUncheckedUpdateManyInput
  >;
  /**
   * Filter which Wexels to update
   */
  where?: Prisma.WexelWhereInput;
  /**
   * Limit how many Wexels to update.
   */
  limit?: number;
};

/**
 * Wexel updateManyAndReturn
 */
export type WexelUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * The data used to update Wexels.
   */
  data: Prisma.XOR<
    Prisma.WexelUpdateManyMutationInput,
    Prisma.WexelUncheckedUpdateManyInput
  >;
  /**
   * Filter which Wexels to update
   */
  where?: Prisma.WexelWhereInput;
  /**
   * Limit how many Wexels to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Wexel upsert
 */
export type WexelUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * The filter to search for the Wexel to update in case it exists.
   */
  where: Prisma.WexelWhereUniqueInput;
  /**
   * In case the Wexel found by the `where` argument doesn't exist, create a new Wexel with this data.
   */
  create: Prisma.XOR<Prisma.WexelCreateInput, Prisma.WexelUncheckedCreateInput>;
  /**
   * In case the Wexel was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WexelUpdateInput, Prisma.WexelUncheckedUpdateInput>;
};

/**
 * Wexel delete
 */
export type WexelDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
  /**
   * Filter which Wexel to delete.
   */
  where: Prisma.WexelWhereUniqueInput;
};

/**
 * Wexel deleteMany
 */
export type WexelDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Wexels to delete
   */
  where?: Prisma.WexelWhereInput;
  /**
   * Limit how many Wexels to delete.
   */
  limit?: number;
};

/**
 * Wexel.collateral_position
 */
export type Wexel$collateral_positionArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CollateralPosition
   */
  select?: Prisma.CollateralPositionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CollateralPosition
   */
  omit?: Prisma.CollateralPositionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollateralPositionInclude<ExtArgs> | null;
  where?: Prisma.CollateralPositionWhereInput;
};

/**
 * Wexel.listings
 */
export type Wexel$listingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Listing
   */
  select?: Prisma.ListingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Listing
   */
  omit?: Prisma.ListingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ListingInclude<ExtArgs> | null;
  where?: Prisma.ListingWhereInput;
  orderBy?:
    | Prisma.ListingOrderByWithRelationInput
    | Prisma.ListingOrderByWithRelationInput[];
  cursor?: Prisma.ListingWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ListingScalarFieldEnum | Prisma.ListingScalarFieldEnum[];
};

/**
 * Wexel.claims
 */
export type Wexel$claimsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Claim
   */
  select?: Prisma.ClaimSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Claim
   */
  omit?: Prisma.ClaimOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClaimInclude<ExtArgs> | null;
  where?: Prisma.ClaimWhereInput;
  orderBy?:
    | Prisma.ClaimOrderByWithRelationInput
    | Prisma.ClaimOrderByWithRelationInput[];
  cursor?: Prisma.ClaimWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ClaimScalarFieldEnum | Prisma.ClaimScalarFieldEnum[];
};

/**
 * Wexel.boosts
 */
export type Wexel$boostsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Boost
   */
  select?: Prisma.BoostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Boost
   */
  omit?: Prisma.BoostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BoostInclude<ExtArgs> | null;
  where?: Prisma.BoostWhereInput;
  orderBy?:
    | Prisma.BoostOrderByWithRelationInput
    | Prisma.BoostOrderByWithRelationInput[];
  cursor?: Prisma.BoostWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.BoostScalarFieldEnum | Prisma.BoostScalarFieldEnum[];
};

/**
 * Wexel without action
 */
export type WexelDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Wexel
   */
  select?: Prisma.WexelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Wexel
   */
  omit?: Prisma.WexelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WexelInclude<ExtArgs> | null;
};
